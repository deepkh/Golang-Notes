/*
 * Sample API
 *
 * Production: http://api.example.com/v1  Staging: http://staging-api.example.com/v1 
 *
 * API version: 0.1.9
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/v1/",
		Index,
	},

	Route{
		"FileuploadPost",
		strings.ToUpper("Post"),
		"/v1/fileupload",
		FileuploadPost,
	},

	Route{
		"FormdatauploadPost",
		strings.ToUpper("Post"),
		"/v1/formdataupload",
		FormdatauploadPost,
	},

	Route{
		"UserPost",
		strings.ToUpper("Post"),
		"/v1/user",
		UserPost,
	},

	Route{
		"UserUserIdsortsortGet",
		strings.ToUpper("Get"),
		"/v1/user/{userId}?sort={sort}",
		UserUserIdsortsortGet,
	},
}
